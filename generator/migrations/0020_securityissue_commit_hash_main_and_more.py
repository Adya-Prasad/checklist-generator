# Generated by Django 6.0.dev20250305152038 on 2025-03-07 17:04

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


def populate_securityissue_hashes(apps, schema_editor):
    SecurityIssueReleasesThrough = apps.get_model(
        "generator", "SecurityIssueReleasesThrough"
    )
    SecurityRelease = apps.get_model("generator", "SecurityRelease")

    for security_release in SecurityRelease.objects.all().prefetch_related(
        "securityissue_set"
    ):
        hashes = security_release.hashes.copy()
        issues = security_release.securityissue_set.all()  # make use of prefetch
        for issue in issues:
            per_cve_hashes = hashes.pop(issue.cve_year_number, {})

            issue.commit_hash_main = per_cve_hashes.pop("main", "") or ""
            issue.save()

            for version in security_release.versions:
                released_version = version.rsplit(".", 1)[0]
                commit_hash = per_cve_hashes.pop(released_version, "") or ""
                SecurityIssueReleasesThrough.objects.create(
                    securityissue=issue, release_id=version, commit_hash=commit_hash
                )
            # add whatever was left
            for branch, commit_hash in per_cve_hashes.items():
                SecurityIssueReleasesThrough.objects.create(
                    securityissue=issue, release_id=branch, commit_hash=commit_hash or ""
                )


class Migration(migrations.Migration):

    dependencies = [
        ("generator", "0019_release_remove_alpharelease_is_lts_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="securityissue",
            name="commit_hash_main",
            field=models.CharField(
                blank=True, db_index=True, default="", max_length=128
            ),
        ),
        migrations.AlterField(
            model_name="securityrelease",
            name="affected_branches",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=100, null=True), size=None
            ),
        ),
        migrations.AlterField(
            model_name="securityrelease",
            name="versions",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=100, null=True), size=None
            ),
        ),
        migrations.CreateModel(
            name="SecurityIssueReleasesThrough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commit_hash",
                    models.CharField(
                        blank=True, db_index=True, default="", max_length=128
                    ),
                ),
                (
                    "release",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.release",
                    ),
                ),
                (
                    "securityissue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="generator.securityissue",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="securityissue",
            name="releases",
            field=models.ManyToManyField(
                through="generator.SecurityIssueReleasesThrough", to="generator.release"
            ),
        ),
        migrations.AddConstraint(
            model_name="securityissuereleasesthrough",
            constraint=models.UniqueConstraint(
                fields=("securityissue", "release"), name="unique_securityissue_release"
            ),
        ),
        migrations.AddConstraint(
            model_name="securityissuereleasesthrough",
            constraint=models.UniqueConstraint(
                condition=models.Q(("commit_hash", ""), _negated=True),
                fields=("commit_hash",),
                name="unique_non_empty_commit_hash",
            ),
        ),
        migrations.RunPython(populate_securityissue_hashes, migrations.RunPython.noop),
    ]
